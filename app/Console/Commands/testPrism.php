<?php

namespace App\Console\Commands;

use Prism\Prism\Enums\Provider;
use Prism\Prism\Prism;
use Prism\Prism\Schema\ObjectSchema;
use Prism\Prism\Schema\StringSchema;
use Illuminate\Console\Command;

class testPrism extends Command
{
  /**
   * The name and signature of the console command.
   *
   * @var string
   */
  protected $signature = 'prism:test';

  /**
   * The console command description.
   *
   * @var string
   */
  protected $description = 'Command description';

  /**
   * Execute the console command.
   */
  public function handle()
  {

    $email = "de dominguez arroba airzone control punto com";
    $schema = new ObjectSchema(
      name: 'email_transcription',
      description: 'Structured email transcription',
      properties: [
        new StringSchema('email', 'Processed email address for internal use'),
        new StringSchema('readable_email', 'Email formatted for text-to-speech readability')
      ],
      requiredFields: ['email', 'readable_email']
    );

    //LÓGICA DE CORECCIÓN DE EMAIL AI

    $prompt = <<<EOT
        You are an advanced email transcription proofreader. Users provide snippets of text generated by a speech-to-text program.
        Your job is to correct and normalize these snippets into properly formatted email addresses.
        
        **Step 1: Correct the Email Address**
        - Its VERY important to literally correct it at the order given by the user.
        - Its VERY IMPORTANT not to create any word to complete the email, just correct the bad word given or not completed, but NEVER invent ANY WORD not given
        - Identify and correct common transcription mistakes in email addresses.
        - Replace spoken words with their correct symbols:
          - "arroba" → "@"
          - "punto com" → ".com"
        - Correct misspelled domains or misplaced words:
          - If "airsoft" appears in the domain, replace it with "airzonecontrol".
          - If "control" appears after "@", replace it with "airzonecontrol".
        - Ensure the email format follows "username@domain.tld".
        - If no valid email can be formed, return "Esto no es un email válido".
        
        **Step 2: Generate a Readable Version for TTS**
        - Convert the corrected email into a version optimized for text-to-speech (TTS):
          - The "@" symbol should be spoken as "arroba".
          - The ".com" should be spoken as "punto com".
          - The username and domain should be spaced clearly to enhance pronunciation.
        
        **Example Output:**
        - Email: "ddominguez@airzonecontrol.org"
        - Readable Email: "de dominguez arroba airzone control punto org"
        
        **Your Task:**
        - Return a structured JSON response with two fields:
          1. "email": The correctly formatted email address.
          2. "readable_email": The TTS-friendly version of the corrected email.
        - If no valid email can be formed, return "Esto no es un email válido" for both fields.
        
        The provided email snippet: "$email"
        EOT;

        $response = Prism::structured()
        ->using(Provider::OpenAI, 'gpt-4o-mini')
        ->withSchema($schema)
        ->withPrompt($prompt)
        ->asStructured();

        $email = $response;
    dd($email);
  }
}
